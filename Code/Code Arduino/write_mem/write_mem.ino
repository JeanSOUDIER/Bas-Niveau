#define DATAOUT 11//MOSI
#define DATAIN  12//MISO 
#define SPICLOCK  13//sck
#define SLAVESELECT 10//ss

//opcodes
#define WREN  6
#define WRDI  4
#define RDSR  5
#define WRSR  1
#define READ  3
#define WRITE 2

unsigned char plan_mem[] = {255, 255, 16, 1, 136, 17, 0, 0, 255, 0, 255, 2, 132, 129, 0, 1, 255, 1, 255, 3, 129, 129, 0, 2, 255, 2, 255, 4, 129, 129, 0, 3, 255, 3, 255, 5, 129, 129, 0, 4, 255, 4, 255, 6, 129, 129, 0, 5, 255, 5, 255, 7, 129, 130, 0, 6, 255, 6, 17, 255, 129, 24, 0, 7, 255, 255, 255, 9, 136, 129, 0, 9, 255, 8, 255, 10, 128, 129, 0, 10, 255, 9, 255, 11, 129, 129, 0, 11, 255, 10, 255, 12, 129, 129, 0, 12, 255, 11, 255, 13, 129, 131, 0, 13, 255, 12, 18, 14, 129, 17, 0, 14, 255, 13, 255, 15, 133, 130, 0, 15, 255, 14, 19, 255, 129, 24, 0, 16, 0, 255, 20, 255, 40, 72, 1, 0, 7, 255, 25, 255, 72, 24, 1, 7, 13, 255, 30, 255, 104, 40, 1, 14, 15, 255, 31, 255, 72, 72, 1, 16, 16, 255, 255, 21, 24, 130, 2, 0, 255, 20, 33, 255, 130, 24, 2, 1, 255, 255, 34, 23, 136, 17, 2, 3, 255, 22, 255, 24, 132, 128, 2, 4, 255, 23, 255, 255, 129, 136, 2, 5, 17, 255, 35, 255, 24, 24, 2, 7, 255, 255, 36, 255, 136, 24, 2, 9, 255, 255, 37, 28, 136, 17, 2, 11, 255, 27, 255, 29, 132, 129, 2, 12, 255, 28, 255, 30, 129, 132, 2, 13, 18, 29, 255, 255, 17, 136, 2, 14, 19, 255, 255, 32, 24, 130, 2, 16, 255, 31, 38, 255, 130, 24, 2, 17, 21, 255, 40, 255, 72, 40, 3, 1, 22, 255, 41, 255, 40, 88, 3, 3, 25, 255, 44, 255, 24, 24, 3, 7, 26, 255, 45, 255, 8, 88, 3, 9, 27, 255, 47, 255, 40, 40, 3, 11, 32, 255, 51, 255, 72, 40, 3, 17, 255, 255, 52, 40, 136, 20, 4, 0, 33, 39, 255, 255, 20, 136, 4, 1, 34, 255, 53, 42, 24, 17, 4, 3, 255, 41, 255, 43, 134, 130, 4, 4, 255, 42, 54, 255, 129, 24, 4, 5, 35, 255, 55, 255, 24, 24, 4, 7, 36, 255, 56, 46, 24, 17, 4, 9, 255, 45, 255, 47, 134, 132, 4, 10, 37, 46, 255, 255, 17, 136, 4, 11, 255, 255, 57, 255, 136, 24, 4, 13, 255, 255, 58, 50, 136, 17, 4, 15, 255, 49, 255, 51, 132, 132, 4, 16, 38, 50, 255, 255, 17, 136, 4, 17, 39, 255, 59, 255, 40, 24, 5, 0, 41, 255, 61, 255, 56, 40, 5, 3, 43, 255, 62, 255, 72, 24, 5, 5, 44, 255, 63, 255, 24, 72, 5, 7, 45, 255, 65, 255, 56, 40, 5, 9, 48, 255, 68, 255, 8, 104, 5, 13, 49, 255, 70, 255, 40, 104, 5, 15, 52, 255, 73, 255, 24, 24, 6, 0, 255, 255, 74, 61, 136, 20, 6, 2, 53, 60, 255, 255, 20, 136, 6, 3, 54, 255, 75, 255, 24, 24, 6, 5, 55, 255, 255, 64, 24, 129, 6, 7, 255, 63, 255, 65, 130, 132, 6, 8, 56, 64, 255, 255, 17, 136, 6, 9, 255, 255, 76, 67, 136, 17, 6, 11, 255, 66, 255, 68, 132, 133, 6, 12, 57, 67, 255, 69, 17, 129, 6, 13, 255, 68, 255, 70, 131, 133, 6, 14, 58, 69, 255, 71, 17, 129, 6, 15, 255, 70, 255, 72, 131, 130, 6, 16, 255, 71, 77, 255, 129, 24, 6, 17, 59, 255, 78, 255, 24, 24, 7, 0, 60, 255, 79, 255, 40, 72, 7, 2, 62, 255, 81, 255, 24, 72, 7, 5, 66, 255, 87, 255, 40, 56, 7, 11, 72, 255, 91, 255, 72, 24, 7, 17, 73, 255, 92, 255, 24, 24, 8, 0, 74, 255, 255, 80, 24, 130, 8, 2, 255, 79, 93, 255, 130, 24, 8, 3, 75, 255, 255, 82, 24, 129, 8, 5, 255, 81, 255, 83, 130, 129, 8, 6, 255, 82, 255, 84, 129, 129, 8, 7, 255, 83, 255, 85, 129, 131, 8, 8, 255, 84, 94, 86, 129, 17, 8, 9, 255, 85, 255, 87, 133, 134, 8, 10, 76, 86, 95, 255, 17, 8, 8, 11, 255, 255, 96, 89, 136, 17, 8, 13, 255, 88, 255, 90, 132, 130, 8, 14, 255, 89, 97, 255, 129, 72, 8, 15, 77, 255, 99, 255, 24, 56, 8, 17, 78, 255, 100, 255, 24, 88, 9, 0, 80, 255, 103, 255, 72, 104, 9, 3, 85, 255, 108, 255, 104, 40, 9, 9, 87, 255, 255, 255, 88, 136, 9, 11, 88, 255, 109, 255, 40, 24, 9, 13, 90, 255, 255, 98, 72, 129, 9, 15, 255, 97, 255, 99, 130, 134, 9, 16, 91, 98, 110, 255, 17, 24, 9, 17, 92, 255, 111, 101, 24, 17, 10, 0, 255, 100, 255, 102, 134, 129, 10, 1, 255, 101, 255, 103, 129, 133, 10, 2, 93, 102, 255, 104, 17, 129, 10, 3, 255, 103, 255, 105, 131, 128, 10, 4, 255, 104, 255, 255, 129, 136, 10, 5, 255, 255, 112, 107, 136, 17, 10, 7, 255, 106, 255, 108, 132, 132, 10, 8, 94, 107, 255, 255, 17, 136, 10, 9, 96, 255, 115, 255, 24, 40, 10, 13, 99, 255, 118, 255, 88, 40, 10, 17, 100, 255, 119, 255, 56, 24, 11, 0, 106, 255, 123, 255, 40, 88, 11, 7, 255, 255, 126, 114, 136, 17, 11, 11, 255, 113, 255, 115, 132, 132, 11, 12, 109, 114, 255, 255, 17, 136, 11, 13, 255, 255, 127, 117, 136, 17, 11, 15, 255, 116, 255, 118, 132, 132, 11, 16, 110, 117, 255, 255, 17, 136, 11, 17, 111, 255, 128, 255, 24, 24, 12, 0, 255, 255, 130, 121, 136, 33, 12, 3, 255, 120, 255, 122, 132, 130, 12, 4, 255, 121, 131, 255, 129, 24, 12, 5, 112, 255, 132, 124, 24, 1, 12, 7, 255, 123, 255, 125, 134, 130, 12, 8, 255, 124, 133, 255, 129, 24, 12, 9, 113, 255, 134, 255, 40, 24, 12, 11, 116, 255, 137, 255, 40, 104, 12, 15, 119, 255, 140, 255, 24, 24, 13, 0, 255, 255, 141, 130, 136, 20, 13, 2, 120, 129, 255, 255, 36, 136, 13, 3, 122, 255, 142, 255, 72, 24, 13, 5, 123, 255, 255, 255, 56, 136, 13, 7, 125, 255, 143, 255, 72, 24, 13, 9, 126, 255, 144, 255, 24, 24, 13, 11, 255, 255, 255, 136, 136, 129, 13, 13, 255, 135, 255, 137, 128, 133, 13, 14, 127, 136, 255, 138, 17, 129, 13, 15, 255, 137, 255, 139, 131, 130, 13, 16, 255, 138, 145, 255, 129, 24, 13, 17, 128, 255, 146, 255, 24, 24, 14, 0, 129, 255, 147, 255, 40, 24, 14, 2, 131, 255, 149, 255, 24, 104, 14, 5, 133, 255, 153, 255, 24, 40, 14, 9, 134, 255, 154, 255, 24, 24, 14, 11, 139, 255, 159, 255, 72, 56, 14, 17, 140, 255, 160, 255, 24, 24, 15, 0, 141, 255, 161, 255, 24, 24, 15, 2, 255, 255, 255, 149, 136, 133, 15, 4, 142, 148, 255, 150, 16, 129, 15, 5, 255, 149, 255, 151, 131, 129, 15, 6, 255, 150, 255, 152, 129, 129, 15, 7, 255, 151, 255, 153, 129, 132, 15, 8, 143, 152, 255, 255, 17, 136, 15, 9, 144, 255, 162, 255, 24, 24, 15, 11, 255, 255, 163, 156, 136, 17, 15, 13, 255, 155, 255, 157, 132, 129, 15, 14, 255, 156, 255, 158, 129, 129, 15, 15, 255, 157, 255, 159, 129, 134, 15, 16, 145, 158, 164, 255, 17, 24, 15, 17, 146, 255, 165, 255, 24, 72, 16, 0, 147, 255, 167, 255, 24, 104, 16, 2, 154, 255, 176, 255, 24, 104, 16, 11, 155, 255, 178, 255, 40, 40, 16, 13, 159, 255, 181, 255, 88, 40, 16, 17, 160, 255, 255, 166, 24, 129, 17, 0, 255, 165, 255, 167, 130, 133, 17, 1, 161, 166, 255, 168, 17, 129, 17, 2, 255, 167, 255, 169, 131, 129, 17, 3, 255, 168, 255, 170, 129, 129, 17, 4, 255, 169, 255, 171, 129, 129, 17, 5, 255, 170, 255, 172, 129, 129, 17, 6, 255, 171, 255, 173, 129, 129, 17, 7, 255, 172, 255, 174, 129, 129, 17, 8, 255, 173, 255, 175, 129, 129, 17, 9, 255, 174, 255, 176, 129, 133, 17, 10, 162, 175, 255, 177, 17, 129, 17, 11, 255, 176, 255, 178, 131, 132, 17, 12, 163, 177, 255, 255, 17, 136, 17, 13, 255, 255, 255, 180, 136, 129, 17, 15, 255, 179, 255, 181, 128, 132, 17, 16, 164, 180, 255, 255, 17, 136, 17, 17

};
int compteur = 0;
int adresse = 0x4800;

char spi_transfer(volatile char data) {
  SPDR = data;                    // Start the transmission
  while (!(SPSR & (1<<SPIF)))     // Wait the end of the transmission
  {};
  return SPDR;                    // return the received byte
}

void writeMem(int address) {
  //plan_mem
  for(int i=0;i<(int)(sizeof(plan_mem)/64)+1;i++) {
    digitalWrite(SLAVESELECT,LOW);
    spi_transfer(WREN);
    digitalWrite(SLAVESELECT,HIGH);
    delay(10);
    digitalWrite(SLAVESELECT,LOW);
    //Serial.print("a = ");
    //Serial.println(address);
    spi_transfer(WRITE); //write instruction
    spi_transfer((char)(address>>8));   //send MSByte address first
    spi_transfer((char)(address));      //send LSByte address
    address += 64;
    for(int j=0;j<64;j++) {
      //Serial.println(j+i*64);
      spi_transfer(plan_mem[j+i*64]); //write data byte
    }
    digitalWrite(SLAVESELECT,HIGH);
    delay(10);
  }
  
  digitalWrite(SLAVESELECT,LOW);
  spi_transfer(WRDI); //write disable
  digitalWrite(SLAVESELECT,HIGH);
  delay(10);
}

unsigned char readMem(int address) {
  int data;
  digitalWrite(SLAVESELECT,LOW);
  spi_transfer(READ); //transmit read opcode
  spi_transfer((char)(address>>8));   //send MSByte address first
  spi_transfer((char)(address));      //send LSByte address
  data = spi_transfer(0xFF); //get data byte
  digitalWrite(SLAVESELECT,HIGH); //release chip, signal end transfer
  //Serial.println((unsigned char)(data));
  return (unsigned char)(data);
}

void setup() {
  Serial.begin(9600);
  Serial.println(adresse);
  Serial.println(sizeof(plan_mem));

  pinMode(DATAOUT, OUTPUT);
  pinMode(DATAIN, INPUT);
  pinMode(SPICLOCK,OUTPUT);
  pinMode(SLAVESELECT,OUTPUT);
  digitalWrite(SLAVESELECT,HIGH); //disable device

  SPCR = (1<<SPE)|(1<<MSTR);
  //clr=SPSR;
  //clr=SPDR;
  delay(10);

  writeMem(adresse);

  int testeur = 1, cpt_err = 0;

  while(testeur) {
    int test0 = readMem(adresse+compteur);
    Serial.print(compteur/8);
    Serial.print(" --- ");
    Serial.print(test0);
    Serial.print(" <= ");
    Serial.println(plan_mem[compteur]);
    if(test0 != plan_mem[compteur]) {
      Serial.print("error addr = ");
      Serial.println(compteur);
      cpt_err++;
    }
    compteur++;
    if(compteur > sizeof(plan_mem)-1) {
      compteur = 0;
      testeur = 0;
      Serial.println("----------------------");
      if(!cpt_err) {
        Serial.println("OK");
      }
    }
  }
  
}

void loop() {
  
}
